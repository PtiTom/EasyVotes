@model EasyVotes.Models.SessionVote
@{
	ViewData["Title"] = "Admin - Session de Vote";
}

<h1>Modifier une session de vote</h1>

<h2>Détails de cette session</h2>
<p>@Html.LabelFor(s => s.NomSessionVote) : @Html.EditorFor(s => s.NomSessionVote)</p>
<p>@Html.LabelFor(s => s.DebutSession) : @Html.EditorFor(s => s.DebutSession)</p>
<p>@Html.LabelFor(s => s.FinSession) : @Html.EditorFor(s => s.FinSession)</p>
<p>Session de vote créée par @(string.IsNullOrEmpty(Model.InitiateurSession)? "vous" : Html.ValueFor(s => s.InitiateurSession)).</p>

<h2>Questions disponibles</h2>
@foreach (var question in Model.Questions)
{
	<div class="row">
		@{string annotation = (question.Anonyme ? " (Vote Anonyme)" : string.Empty) + string.Format(" - {0} suffrage{1} exprimé{1}.", question.VotesEffectués.Count(), question.VotesEffectués.Count() > 1 ? "s" : string.Empty);}
		<span class="col-6">@question.IntituleVote@annotation</span>
		<span class="col-6">
			@if (Model.Inscrits.Any(i => i == User.Identity.Name))
			{
				string buttonText, buttonClass;
				bool canVote = false;

				if (question.VotesEffectués.Any(se => se.LoginInscrit == User.Identity.Name))
				{
					buttonText = "Vous avez déjà voté";
					buttonClass = "btn-warning";
					canVote = question.VoteOuvert && !question.Anonyme;
				}
				else if (question.VoteOuvert)
				{
					buttonText = "Voter";
					buttonClass = "btn-success";
					canVote = true;
				}
				else
				{
					buttonText = "Vote clos";
					buttonClass = "btn-Light";
				}

				if (canVote)
				{
					@Html.ActionLink(buttonText, "Vote", "Vote", new { IdVote = question.IdVote }, new { @class = "btn " + buttonClass })
				}
				else
				{
					<button type="button" class="btn @buttonClass">@buttonText</button>
				}
			}

			@if (User.Identity.Name == Model.InitiateurSession)
			{
				if (question.VoteOuvert)
				{
					@Html.ActionLink("Clore le vote", "Close", "Vote", new { IdVote = question.IdVote }, new { @class = "btn btn-primary" })
				}
				else
				{
					@Html.ActionLink("Ouvrir le vote", "Open", "Vote", new { IdVote = question.IdVote }, new { @class = "btn btn-primary" })
				}
			}

			@if (!question.VoteOuvert && question.VotesEffectués.Any())
			{
				@Html.ActionLink("Voir les résultats", "Resultats", "Vote", new { IdVote = question.IdVote }, new { @class = "btn btn-primary" })
			}
		</span>
	</div>
}

@Html.ActionLink("Retour", "Index", "Vote", null, new { @class = "btn btn-primary" })